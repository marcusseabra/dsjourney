udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
exemplo <- sample(0:1, 20, replace = TRUE)
# Variáveis fatoriais
set.seed(160)
exemplo <- sample(0:1, 20, replace = TRUE)
is.factor(exemplo)
is.numeric(exemplo)
exemplo <- factor(exemplo, labels = c("private", "public"))
exemplo <- sample(0:1, 20, replace = TRUE)
is.factor(exemplo)
is.numeric(exemplo)
exemplo.f <- factor(exemplo, labels = c("private", "public"))
exemplo.f
levels
Levels
levels(exemplo.f)
is.factor(exemplo.f)
is.factor(exemplo)
statusSocial <- c("low", "middle", "low", "low", "low", "low", "middle", "low", "middle",
"middle", "middle", "middle", "middle", "high", "high", "low", "middle",
"middle", "low", "high")
is.factor(statusSocial)
is.character(statusSocial)
statusSocial.niveis <- factor(statusSocial, levels("low", "middle", "high"))
statusSocial.f.niveis <- factor(statusSocial, levels("low", "middle", "high"))
statusSocial.niveis <- factor(statusSocial, levels= c("low", "middle", "high"))
levels(statusSocial.niveis)
statusSocial.ordenado <- order(statusSocial, levels= c("low", "middle", "high"))
statusSocial.ordenado <- ordered(statusSocial, levels= c("low", "middle", "high"))
statusSocial.ordenado
is.factor(statusSocial.ordenado)
statusSocial.ordenado <- ordered(statusSocial, levels= c(levels(statusSocial.ordenado) , "very.high"))
statusSocial.ordenado[21] <- "very.high"
statusSocial.ordenado
?cars
?cars
str(cars)
plot(cars)
plot(cars)
summary(mtcars)
efficient <- mtcars[mtcars$mpg >= 23,]
View(efficient)
efficient <- mtcars[mtcars$mpg > 23,]
efficient <- mtcars[mtcars$mpg >= 23,]
efficient
data(mtcars)
dim(mtcars)
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
getwd()
setwd('/home/seabra/dev/dsjourney/EDA/lesson3')
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
View(pf)
View(pf)
names(pf)
library(ggplot2)
qplot(x = dob_day, data = pf) +
scale_x_discrete(breaks=1:31)
qplot(x = dob_day, data = pf)
knitr::opts_chunk$set(echo = TRUE)
setwd('/home/seabra/dev/dsjourney/eda/data')
players <- read.csv("nba-players.csv", stringsAsFactors=FALSE)
read.csv?
?read.csv
help(read.csv)
names(players)
help(str)
help("summary")
players <- read.csv("nba-players.csv", stringsAsFactors=FALSE)
summary(players)
str(players)
help(str)
str(players)
celtics <- subset(players, Team == "Celtics")
celtics.o <- celtics[order(celtics$Ht_inches), ]
help("barplot")
help(par)
help(mar)
par(mar(c(5,10,5,5)))
par(mar=(c(5,10,5,5)))
help("barplot")
barplot(celtics.o$Ht_inches, names.arg = celtics.o$Name, horiz = FALSE, las=1, main = "Altura dos jogadores do Boston Celtics")
barplot(celtics.o$Ht_inches, names.arg = celtics.o$Name, horiz = TRUE, las=1, main = "Altura dos jogadores do Boston Celtics")
celtics <- subset(players, Team == "Celtics")
celtics.o <- celtics[order(celtics$Ht_inches), ]
par(mar=(c(5,10,5,5)))
barplot(celtics.o$Ht_inches, names.arg = celtics.o$Name, horiz = TRUE, las=1, main = "Altura dos jogadores do Boston Celtics")
celtics <- subset(players, Team == "Cavaliers")
celtics.o <- celtics[order(celtics$Ht_inches), ]
par(mar=(c(5,10,5,5)))
barplot(celtics.o$Ht_inches, names.arg = celtics.o$Name, horiz = FALSE, las=1, main = "Altura dos jogadores do Boston Celtics")
View(players)
celtics <- subset(players, Team == "Thunder")
celtics.o <- celtics[order(celtics$Ht_inches), ]
par(mar=(c(5,10,5,5)))
barplot(celtics.o$Ht_inches, names.arg = celtics.o$Name, horiz = TRUE, las=1, main = "Altura dos jogadores do Boston Celtics")
cavs <- subset(players, Team == "Cavaliers")
cavs.o <- cavs[order(cavs$Ht_inches), ]
par(mar=(c(5,10,5,5)))
cavs <- subset(players, Team == "Cavaliers")
cavs.o <- cavs[order(cavs$Ht_inches), ]
# O parâmetro "mar" estabelece o número de linhas da margem na sequência botton, left, top, right
par(mar=(c(5,10,5,5)))
barplot(cavs.o$Ht_inches, names.arg = cavs.o$Name, horiz = TRUE, las=1, main = "Altura dos jogadores dos Cavaliers")
